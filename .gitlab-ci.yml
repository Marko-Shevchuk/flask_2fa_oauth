stages:
  - lint
  - test
  - build
  - deploy

lint-job:
  stage: lint
  image: python:3.11-slim
  before_script:
    - pip install ruff
  script:
    - echo "Linting..."
#    - ruff check

pytest-job:
  stage: test
  image: python:3.11-slim
  before_script:
    - pip install -r requirements.txt
  script:
    - echo "Running unit tests..."
    - pytest -s -v --junitxml=report.xml test_placeholder.py
  artifacts:
    reports:
      junit: report.xml
    paths:
      - report.xml

coverage-job:
  stage: test
  image: python:3.11-slim
  before_script:
    - pip install -r requirements.txt
  script:
    - echo "Running tests with coverage..."
    - pytest --cov --cov-fail-under=50 -s -v test_placeholder.py
  coverage: '/TOTAL.*? (100(?:\.0+)?\%|[1-9]?\d(?:\.\d+)?\%)$/'



build-job:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - echo "$GITLAB_REGISTRY_ACCESS_TOKEN" | docker login $CI_REGISTRY -u Marko-Shevchuk --password-stdin
  script:
    - docker build -t registry.gitlab.com/modern5813345/flask_2fa_oauth:latest .
    - docker push registry.gitlab.com/modern5813345/flask_2fa_oauth:latest
#  rules:
#    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
#    - if: '$CI_COMMIT_BRANCH == "main"'


deploy:
  stage: deploy
  image: bentolor/docker-dind-awscli
  services:
    - name: docker:dind
  before_script:
    - aws ecr get-login-password --region eu-central-1 | docker login --username AWS --password-stdin 329599629952.dkr.ecr.eu-central-1.amazonaws.com
  script:
    - docker build -t 329599629952.dkr.ecr.eu-central-1.amazonaws.com/flask_2fa_oauth:latest .
    - docker push 329599629952.dkr.ecr.eu-central-1.amazonaws.com/flask_2fa_oauth:latest
